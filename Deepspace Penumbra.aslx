<!--Saved by Quest 5.6.5783.24153-->
<asl version="550">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <include ref="wearables.aslx" />
  <game name="Deepspace Penumbra">
    <gameid>7f196e8b-7088-4361-8da4-8611f2854633</gameid>
    <version>0.1</version>
    <firstpublished>2015</firstpublished>
    <menufont>'Courier New', Courier, monospace</menufont>
    <author>Anthony H, Alejandro R, Danial W., Samuel W, William A.</author>
    <backgroundimage>petgD1N.jpg</backgroundimage>
    <setbackgroundopacity />
    <backgroundopacity type="double">0</backgroundopacity>
    <menufontsize type="int">24</menufontsize>
    <menubackground>Black</menubackground>
    <menuforeground>DarkSeaGreen</menuforeground>
    <menuhoverbackground>MidnightBlue</menuhoverbackground>
    <menuhoverforeground>DarkSalmon</menuhoverforeground>
    <defaultforeground>Snow</defaultforeground>
    <defaultfont>Impact, Charcoal, sans-serif</defaultfont>
    <defaultfontsize type="int">24</defaultfontsize>
    <defaultlinkforeground>Cyan</defaultlinkforeground>
    <underlinehyperlinks type="boolean">false</underlinehyperlinks>
    <defaultbackground>Black</defaultbackground>
    <showlocation />
    <showborder type="boolean">false</showborder>
    <gridmap type="boolean">false</gridmap>
    <showhealth type="boolean">false</showhealth>
    <feature_asktell />
    <feature_limitinventory />
    <description>A sci-fi adventure where you take over the galaxy!</description>
    <category>Sci-Fi</category>
    <difficulty>Easy</difficulty>
    <cruelty>Polite</cruelty>
  </game>
  <command name="look pragma">
    <pattern>look #object_one#</pattern>
    <script>
      HandleSingleCommand ("look at "+object_one.name)
    </script>
  </command>
  <verb>
    <property>cut</property>
    <pattern>cut</pattern>
    <defaultexpression>"You can't cut " + object.article + "."</defaultexpression>
  </verb>
  <object name="Ship">
    <inherit name="editor_object" />
    <object name="First Floor">
      <inherit name="editor_object" />
      <scenery />
      <object name="Starboard Observation Deck">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description>A beautiful room with a large, curved window out into the stars. This is intended for strategic use, but clearly it's more useful for leasure.</description>
        <exit alias="southwest" to="North Hall">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <object name="Port Side Observation Deck">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description><![CDATA[The large window looking out to the stars is <i>almost</i> enough to distract you from the bar on the east side of the room.]]></description>
        <exit alias="southeast" to="North Hall">
          <inherit name="southeastdirection" />
        </exit>
      </object>
      <object name="Navigation Room">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <description>A serine room with a circular, elevated platform in its center. The captain sits there, looking over his subordinates, and out into the inky abyss of space through a great, curved window. Also, everything is illuminated in orange and cyan, for some reason.</description>
        <exit alias="south" to="North Hall">
          <inherit name="southdirection" />
        </exit>
      </object>
      <object name="Storage">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <description>A room with several shelves of miscellaneous junk. The janitor gets more use out of this place than the rest of the crew.</description>
        <exit alias="east" to="North Hall">
          <inherit name="eastdirection" />
        </exit>
        <object name="Mop">
          <inherit name="editor_object" />
          <look>You see a fear boner. You are aroused... The arousal immediately dissipates when you realize that you're only looking at a mop... Pretty sexy mop though.</look>
          <clean>You tidy things up.</clean>
          <take />
          <volume type="int">3</volume>
          <play>You play with the mop turning your fear boner into a shame boner. </play>
        </object>
      </object>
      <object name="Engineering">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <description>The room is saturated with the sound of the buzzing engine. It spews a weird white plasma behind safety glass. Several panels line the room, controlling the various systems aboard this ship.3</description>
        <exit alias="north" to="South Hall">
          <inherit name="northdirection" />
        </exit>
      </object>
      <object name="Equipment Lockup">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <exit alias="southwest" to="South Hall">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <object name="Air Lock">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <exit alias="west" to="North Hall">
          <inherit name="westdirection" />
        </exit>
      </object>
      <object name="Medical Bay">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <exit alias="west" to="South Hall">
          <inherit name="westdirection" />
        </exit>
        <object name="Blood Tank">
          <inherit name="editor_object" />
          <visible />
          <look>You see a tank full of blood. Upon closer inspection, you see that it contains... an oddly arousing silhouette. </look>
          <alt type="stringlist">
            <value>Blood Tank</value>
          </alt>
          <listalias>Blood Tank</listalias>
        </object>
        <object name="Blood Tank1">
          <inherit name="editor_object" />
          <alias>Blood Tank</alias>
          <look>You see a tank full of blood. This one contains... something I'll hopefully come up with later. </look>
        </object>
        <object name="Blood Tank2">
          <inherit name="editor_object" />
          <alias>Blood Tank</alias>
          <look>You see a tank full of blood. This one seems to have some mud stuck to the outside...</look>
        </object>
      </object>
      <object name="North Hall">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <exit alias="south" to="South Hall">
          <inherit name="southdirection" />
        </exit>
        <exit alias="north" to="Navigation Room">
          <inherit name="northdirection" />
        </exit>
        <exit alias="northeast" to="Starboard Observation Deck">
          <inherit name="northeastdirection" />
        </exit>
        <exit alias="northwest" to="Port Side Observation Deck">
          <inherit name="northwestdirection" />
        </exit>
        <exit alias="west" to="Storage">
          <inherit name="westdirection" />
        </exit>
        <exit alias="east" to="Air Lock">
          <inherit name="eastdirection" />
        </exit>
        <exit alias="southwest" to="Elevator Up">
          <inherit name="southwestdirection" />
        </exit>
      </object>
      <object name="South Hall">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <exit alias="west" to="Science Room">
          <inherit name="westdirection" />
        </exit>
        <exit alias="north" to="North Hall">
          <inherit name="northdirection" />
        </exit>
        <exit alias="east" to="Medical Bay">
          <inherit name="eastdirection" />
        </exit>
        <exit alias="northeast" to="Equipment Lockup">
          <inherit name="northeastdirection" />
        </exit>
        <exit alias="northwest" to="Elevator Up">
          <inherit name="northwestdirection" />
        </exit>
        <exit alias="south" to="Engineering">
          <inherit name="southdirection" />
        </exit>
      </object>
      <object name="Science Room">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <exit alias="south" to="Examination Room">
          <inherit name="southdirection" />
        </exit>
        <exit alias="east" to="South Hall">
          <inherit name="eastdirection" />
        </exit>
        <object name="Beaker">
          <inherit name="editor_object" />
          <look>It a beaker, filled with no thing.</look>
          <scenery />
          <take />
          <break type="script">
            msg ("You smash the beaker to the ground. As the pieces clatter into silence, you wonder why you did that in the first place.")
            RemoveObject (Beaker)
          </break>
        </object>
        <object name="Microscope">
          <inherit name="editor_object" />
          <look>Your eyes a shiny and seemly useful tool for the examing objects.</look>
        </object>
      </object>
      <object name="Examination Room">
        <inherit name="editor_room" />
        <alias>Examination Room</alias>
        <description>A small room with several tables in it, as well as many surgical looking tools in the walls and tables. It looks like the aliens killed more than a few people here.</description>
        <descprefix>You are in</descprefix>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <object name="player">
          <inherit name="editor_object" />
          <inherit name="editor_player" />
          <volume type="int">50</volume>
          <maxvolume type="int">20</maxvolume>
          <containerfullmessage>You can't hold any more items.</containerfullmessage>
          <kill type="scriptdictionary">
            <item key="Scalpel">
              msg ("You stab yourself in the throat. As you bleed you, you wonder, \"what was the point\"?")
              msg ("Game over.")
              finish
            </item>
          </kill>
        </object>
        <exit alias="north" to="Science Room">
          <inherit name="northdirection" />
        </exit>
        <object name="Tarp">
          <inherit name="editor_object" />
          <inherit name="container_limited" />
          <feature_container />
          <isopen type="boolean">false</isopen>
          <close type="boolean">false</close>
          <open type="boolean">false</open>
          <contentsprefix type="string"></contentsprefix>
          <look>A large blue tarp. Something big could probably be hidden under it.</look>
          <volume type="int">10</volume>
          <hidechildren />
          <maxvolume type="int">80</maxvolume>
          <listchildren type="boolean">false</listchildren>
          <take />
          <containerfullmessage>You can't put anymore things under it.</containerfullmessage>
          <uncover type="script">
            if (ListCount(GetDirectChildren(Tarp))=0) {
              msg ("There is nothing under the Tarp to uncover.")
            }
            else {
              foreach (child, GetDirectChildren(Tarp)) {
                MakeObjectVisible (child)
              }
              msg ("You uncover the tarp, revealing;")
              foreach (child, GetDirectChildren(Tarp)) {
                msg (GetDisplayName(child))
              }
              foreach (child, GetDirectChildren(Tarp)) {
                MoveObjectHere (child)
              }
            }
          </uncover>
          <ontake type="script">
          </ontake>
          <cover type="scriptdictionary">
            <item key="Unicorn corpse"><![CDATA[
              tarpVol = 0
              foreach (child, GetDirectChildren(Tarp)) {
                tarpVol = tarpVol + child.volume
              }
              if (Tarp.maxvolume < tarpVol + Unicorn corpse.volume) {
                msg ("There isn't enough room under the tarp.")
              }
              else {
                MakeObjectInvisible (Unicorn corpse)
                MoveObject (Unicorn corpse, Tarp)
                msg ("You cover the Unicorn corpse with the Tarp.")
              }
            ]]></item>
            <item key="Surgical Table"><![CDATA[
              tarpVol = 0
              foreach (child, GetDirectChildren(Tarp)) {
                tarpVol = tarpVol + child.volume
              }
              if (Tarp.maxvolume < tarpVol + Unicorn corpse.volume) {
                msg ("There isn't enough room under the tarp.")
              }
              else {
                MakeObjectInvisible (Surgical Table)
                MoveObject (Surgical Table, Tarp)
                msg ("You cover the Surgical Table with the Tarp.")
              }
            ]]></item>
          </cover>
          <object name="Unicorn corpse">
            <inherit name="editor_object" />
            <look>A large four-limbed alien creature, strongly resembling a unicorn. It has a dangerous looking horn on its head.</look>
            <visible type="boolean">false</visible>
            <alias>Unicorn corpse</alias>
            <scenery type="boolean">false</scenery>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <prefix>a</prefix>
            <volume type="int">60</volume>
            <cutwith type="scriptdictionary">
              <item key="Scalpel">
                if (Contains (Unicorn corpse,Unicorn Horn)) {
                  MoveObject (Unicorn Horn, Examination Room)
                  msg ("You start slicing up the unicorn. Eventually it turns into a bloody pulp. You notice that something falls to the floor.")
                }
                else {
                  msg ("You continue slicing up the unicorn corpse, though, at this point it could pass for any sort of finely minced meat.")
                }
              </item>
            </cutwith>
            <object name="Unicorn Horn">
              <inherit name="editor_object" />
              <take />
              <usedefaultprefix type="boolean">false</usedefaultprefix>
              <prefix>a</prefix>
              <volume type="int">5</volume>
            </object>
          </object>
        </object>
        <object name="Surgical Table">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <feature_container />
          <look>You see several bloody surgical tools. It's odd that the aliens seem to use the same kinds that humans do.</look>
          <hidechildren />
          <listchildren />
          <volume type="int">40</volume>
          <object name="Tongs">
            <inherit name="editor_object" />
            <scenery type="boolean">false</scenery>
            <take />
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <volume type="int">3</volume>
            <look><![CDATA[A shiny sliver tool used for picking things up without touching them with the hands or fingers. You learned the hard way how useful <i>that</i> can be.]]></look>
          </object>
          <object name="Scalpel">
            <inherit name="editor_object" />
            <alias>Scalpel</alias>
            <look>A sharp implement for cutting into things, especially people.</look>
            <scenery type="boolean">false</scenery>
            <feature_usegive />
            <use />
            <take />
            <volume type="int">2</volume>
            <selfuseanything type="script">
              msg ("You try cutting, but eventually stop before your scalpel becomes as dull as you are.")
            </selfuseanything>
            <selfuseon type="scriptdictionary">
              <item key="cadaver">
                msg ("You cut open your parents (WTF is wrong with you?), dig around for a while, and eventually find a green gem!")
                AddToInventory (Green gem)
              </item>
            </selfuseon>
          </object>
          <object name="Bone Saw">
            <inherit name="editor_object" />
            <scenery type="boolean">false</scenery>
            <take />
            <alt type="stringlist">
              <value>saw</value>
            </alt>
            <volume type="int">4</volume>
            <look>A saw for sawing bones. It is not skin safe. What is this, the 1920? No. Why would you ask that? Also, you can see your face on the reflection of the metal teeth.</look>
          </object>
          <object name="Syringe">
            <inherit name="editor_object" />
            <inherit name="container_limited" />
            <scenery type="boolean">false</scenery>
            <take />
            <volume type="int">3</volume>
            <feature_container />
            <maxvolume type="int">1</maxvolume>
            <maxobjects type="int">0</maxobjects>
            <look>The tool you saw in your dad's arm everytime he came home from work. Also you blieve it can used to store liquids.</look>
            <close type="boolean">false</close>
            <open type="boolean">false</open>
            <isopen />
            <transparent />
          </object>
          <object name="Hammer">
            <inherit name="editor_object" />
            <scenery type="boolean">false</scenery>
            <take />
            <volume type="int">4</volume>
            <look>A metal hammer which is obviously useless. Only nails can be used to nail other nails. </look>
          </object>
          <object name="Bottle of Sedative">
            <inherit name="editor_object" />
            <inherit name="edible" />
            <inherit name="container_limited" />
            <scenery type="boolean">false</scenery>
            <alt type="stringlist">
              <value>bottle</value>
              <value>sedative</value>
            </alt>
            <take />
            <volume type="int">2</volume>
            <feature_container />
            <feature_edible />
            <isopen type="boolean">false</isopen>
            <maxvolume type="int">2</maxvolume>
            <listchildren />
            <look>A bottle containing a liquid for knocking people (and non-people) unconsious. If you think it's unrealistic that a sedative could work on any and all life, well... shut up.</look>
            <pour type="script">
              if (Contains (,)) {
              }
            </pour>
            <object name="Sedative">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <volume type="int">1</volume>
              <alias>Sedative</alias>
              <feature_edible />
              <eatmsg>You consume the seditive, which causes you to feel very sleepy...</eatmsg>
              <isLiquid type="string"></isLiquid>
              <extract type="scriptdictionary">
                <item key="Syringe">
                  if (ListCount(GetDirectChildren(Syringe))=1) {
                    msg ("The syringe already contains "+ObjectListItem(GetDirectChildren(Syringe),0).name+".")
                  }
                  else {
                    MoveObject (Sedative, Syringe)
                    msg ("You extract the sedative into the syringe.")
                  }
                </item>
              </extract>
            </object>
          </object>
          <object name="Gloves">
            <inherit name="editor_object" />
            <inherit name="wearable" />
            <take />
            <look>You see rubber gloves that just might stretch enough to fit you. </look>
            <attr name="wear_layer" type="int">1</attr>
            <removeable />
            <onafterremove>You take off the gloves, enjoying the relieving peel of the glove from your suffocated skin.</onafterremove>
            <scenery type="boolean">false</scenery>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <volume type="int">4</volume>
          </object>
        </object>
        <object name="Shelf of Jars">
          <inherit name="editor_object" />
          <inherit name="surface" />
          <look>A shelf with many many jars filled with organs. </look>
          <feature_container />
          <hidechildren />
          <listchildren />
          <alt type="stringlist" />
          <object name="Jar of Stomach">
            <inherit name="editor_object" />
            <inherit name="container_limited" />
            <take />
            <scenery type="boolean">false</scenery>
            <volume type="int">5</volume>
            <feature_container />
            <maxvolume type="int">4</maxvolume>
            <look>A jar of gore. On the side is a labal reading "Stomach".</look>
            <isopen type="boolean">false</isopen>
            <hidechildren />
            <listchildren />
            <transparent />
            <object name="Alien Stomach">
              <inherit name="editor_object" />
              <look>A gross mass of gore. It could possibly be made into a delicious meat pie.</look>
              <take />
            </object>
          </object>
          <object name="Jar of Eyes">
            <inherit name="editor_object" />
            <inherit name="container_limited" />
            <take />
            <scenery type="boolean">false</scenery>
            <volume type="int">5</volume>
            <look>A jar filled with many alien eyes.</look>
            <feature_container />
            <maxvolume type="int">4</maxvolume>
            <isopen type="boolean">false</isopen>
            <hidechildren />
            <listchildren />
            <transparent />
            <break type="script">
              msg ("You throw the jar to the ground. The eyes spread to and frow.")
              foreach (child, GetDirectChildren(Jar of Eyes)) {
                MoveObjectHere (child)
              }
              RemoveObject (Jar of Eyes)
            </break>
            <object name="Human Eye">
              <inherit name="editor_object" />
              <look>An unsettlingly familiar looking eye ball.</look>
              <take />
              <volume type="int">1</volume>
            </object>
            <object name="Compound Eye">
              <inherit name="editor_object" />
              <take />
              <volume type="int">1</volume>
              <look>An eye made up of many tiny units. It looks like a giand fly's eye.</look>
            </object>
            <object name="Reptilian Eye">
              <inherit name="editor_object" />
              <volume type="int">1</volume>
              <take />
              <look>A green eye with the vertical slit characteristic of a reptile, though with alien creatures you never really know.</look>
            </object>
            <object name="Refractive Eyes">
              <inherit name="editor_object" />
              <look>An eye which reflects light back at you from the cornea, similar to a cat's eye.</look>
              <volume type="int">1</volume>
              <take />
            </object>
          </object>
          <object name="Jar of Peanuts">
            <inherit name="editor_object" />
            <inherit name="container_limited" />
            <look>An odd jar, filled with peanuts. On it is a label reading "Jar of: Deez Nutz".</look>
            <take />
            <scenery type="boolean">false</scenery>
            <volume type="int">5</volume>
            <feature_container />
            <maxvolume type="int">4</maxvolume>
            <isopen type="boolean">false</isopen>
            <hidechildren />
            <listchildren />
            <transparent />
            <break type="script">
              msg ("You throw the jar to the ground, spreading your nuts all over the place.")
              foreach (child, GetDirectChildren(Jar of Peanuts)) {
                MoveObjectHere (child)
              }
              RemoveObject (Jar of Peanuts)
            </break>
            <object name="Peanut">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <look>It looks like an ordinary peanut.</look>
              <take />
              <volume type="int">0</volume>
              <feature_edible />
              <eatmsg>You consume the peanut. These have clearly aged beyond the ideal.</eatmsg>
              <alias>Peanut</alias>
              <attr name="feature_usegive" type="boolean">false</attr>
              <use type="script">
              </use>
            </object>
            <object name="Peanut1">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <look>It looks like an ordinary peanut.</look>
              <take />
              <volume type="int">0</volume>
              <feature_edible />
              <eatmsg>You consume the peanut. These have clearly aged beyond the ideal.</eatmsg>
              <alias>Peanut</alias>
              <attr name="feature_usegive" type="boolean">false</attr>
              <use type="script">
              </use>
            </object>
            <object name="Peanut2">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <look>It looks like an ordinary peanut.</look>
              <take />
              <volume type="int">0</volume>
              <feature_edible />
              <eatmsg>You consume the peanut. These have clearly aged beyond the ideal.</eatmsg>
              <alias>Peanut</alias>
              <attr name="feature_usegive" type="boolean">false</attr>
              <use type="script">
              </use>
            </object>
            <object name="Peanut3">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <look>It looks like an ordinary peanut.</look>
              <take />
              <volume type="int">0</volume>
              <feature_edible />
              <eatmsg>You consume the peanut. These have clearly aged beyond the ideal.</eatmsg>
              <alias>Peanut</alias>
              <attr name="feature_usegive" type="boolean">false</attr>
              <use type="script">
              </use>
            </object>
            <object name="Peanut4">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <look>It looks like an ordinary peanut.</look>
              <take />
              <volume type="int">0</volume>
              <feature_edible />
              <eatmsg>You consume the peanut. These have clearly aged beyond the ideal.</eatmsg>
              <alias>Peanut</alias>
              <attr name="feature_usegive" type="boolean">false</attr>
              <use type="script">
              </use>
            </object>
          </object>
          <object name="Jar of Pickles">
            <inherit name="editor_object" />
            <inherit name="container_limited" />
            <look>Yummy pickels.</look>
            <volume type="int">5</volume>
            <take />
            <takemsg>Default take.</takemsg>
            <feature_container />
            <isopen type="boolean">false</isopen>
            <maxvolume type="int">4</maxvolume>
            <hidechildren />
            <listchildren />
            <transparent />
            <break type="script">
              msg ("You throw the jar to the ground, spreading the tortured cucumbers across the floor. The smell is terrible!")
              foreach (child, GetDirectChildren(Jar of Pickles)) {
                MoveObjectHere (child)
              }
              RemoveObject (Jar of Pickles)
            </break>
            <object name="Pickle">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <look>A pickle. It doesn't look alien at all.</look>
              <feature_edible />
              <eatmsg>You consume the pickle. After finishing, you puke in your mouth, only now remembering that you hate pickles.</eatmsg>
              <take />
              <volume type="int">1</volume>
              <alias>Pickle</alias>
            </object>
            <object name="Pickle1">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <look>A pickle. It doesn't look alien at all.</look>
              <feature_edible />
              <eatmsg>You consume the pickle. After finishing, you puke in your mouth, only now remembering that you hate pickles.</eatmsg>
              <take />
              <volume type="int">1</volume>
              <alias>Pickle</alias>
            </object>
            <object name="Pickle2">
              <inherit name="editor_object" />
              <inherit name="edible" />
              <look>A pickle. It doesn't look alien at all.</look>
              <feature_edible />
              <eatmsg>You consume the pickle. After finishing, you puke in your mouth, only now remembering that you hate pickles.</eatmsg>
              <take />
              <volume type="int">1</volume>
              <alias>Pickle</alias>
            </object>
            <object name="Pickle Juice">
              <inherit name="editor_object" />
              <look>A grotesque green liquid. Just the smell of it makes you want vomit.</look>
              <extract type="scriptdictionary">
                <item key="Syringe">
                  if (ListCount(GetDirectChildren(Syringe))=1) {
                    msg ("The syringe already contains "+ObjectListItem(GetDirectChildren(Syringe),0).name+".")
                  }
                  else {
                    MoveObject (Pickle Juice, Syringe)
                    msg ("You extract the sedative into the syringe.")
                  }
                </item>
              </extract>
            </object>
          </object>
          <object name="Jar of Purple Slime">
            <inherit name="editor_object" />
            <inherit name="container_limited" />
            <take type="boolean">false</take>
            <look>A jar with a label in a weird alien language which you can't read. As you sway the jar back and forth, the odd colored slime inside jiggles, flowing only slightly.</look>
            <feature_container />
            <maxvolume type="int">4</maxvolume>
            <isopen type="boolean">false</isopen>
            <openmsg>You open the jar and immediately smell a very pungent stench.</openmsg>
            <closemsg>You close the jar and slowly the smell subsides.</closemsg>
            <hidechildren />
            <listchildren />
            <listchildrenprefix>Inside is</listchildrenprefix>
            <transparent />
            <object name="Purple Slime">
              <inherit name="editor_object" />
              <drop />
              <look>It's possibly some form of alien blood or atleast from out of this world.</look>
              <volume type="int">4</volume>
              <take type="script">
                if (Gloves.worn) {
                  msg ("You scoop out the slime and hold some in your hand.")
                  AddToInventory (Purple Slime)
                }
                else {
                  msg ("You scoop out the slime and play with it at first but soon after, notice that it starts to dissolve your skin and you lose your hand, dropping the slime to the floor. You lose hold of your inventory.")
                  MoveObjectHere (Purple Slime)
                  foreach (child, GetDirectChildren(player)) {
                    MoveObjectHere (child)
                  }
                  player.maxvolume = player.maxvolume-10
                }
              </take>
            </object>
          </object>
          <object name="Fume Jar">
            <inherit name="editor_object" />
            <inherit name="openable" />
            <look>A jar filled with a pink gas. It's labeled with an alien skull and cross bones. You wonder what it could possibly mean.</look>
            <usedefaultprefix type="boolean">false</usedefaultprefix>
            <feature_container />
            <take />
            <openscript type="script">
              msg ("You open the jar, and the pink gas jets out, filling the room and your lungs. You suffocate in burning agony. Too bad there was no way to predict this outcome.")
              finish
            </openscript>
            <break type="script">
              msg ("You break the jar by throwing it to the ground. The pink gas inside spreads throughout the room. You breathe it in before having a chance to react. You suffocate in burning agony. Too bad there was no way to predict this outcome.")
              finish
            </break>
          </object>
        </object>
        <object name="Probe">
          <inherit name="editor_object" />
          <look>An odd probe attached to the ceiling. It has an odd phallic object on its end. You dread to think what its used for.</look>
          <take type="script">
            msg ("You grab and pull the probe, but it's stuck to the wall.")
            if (Contains (Probe,Alien Dildo)) {
              msg ("As you're grabbing it, your hand slips, carrying a piece of the probe.")
              MoveObject (Alien Dildo, player)
            }
          </take>
          <object name="Alien Dildo">
            <inherit name="editor_object" />
            <look>A dildo used by aliens for probing.</look>
            <take />
            <volume type="int">3</volume>
          </object>
        </object>
      </object>
      <object name="Elevator Down">
        <inherit name="editor_room" />
        <alias></alias>
        <descprefix type="string"></descprefix>
        <exitslistprefix type="string"></exitslistprefix>
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <description type="script">
          msg ("You take the elevator up to the North Hall.")
          MoveObject (player, North Hall)
        </description>
      </object>
    </object>
    <object name="Second Floor">
      <inherit name="editor_object" />
      <object name="Crew Quarters">
        <inherit name="editor_room" />
        <exit alias="south" to="Recreation Room">
          <inherit name="southdirection" />
        </exit>
        <object name="Robot Sexual Relief Machine">
          <inherit name="editor_object" />
          <look>As a lonely being floating through space, you find yourself longing for affection. Thankfully, you notice the robot in the corner, which has many accessories to statisfy your needs.</look>
        </object>
        <object name="Player Bed">
          <inherit name="editor_object" />
          <alias>Player's Bed</alias>
          <look>A very plain bed that looks very flat and is very hard on your back.</look>
          <visible />
        </object>
        <object name="Toilet">
          <inherit name="editor_object" />
          <look>You look down the toilet only to realize it's backed up with a giant purple turd that smells like a wet cat died with skunk piss sprayed all over.</look>
        </object>
        <object name="Juke Box">
          <inherit name="editor_object" />
          <look>A awesome old school coin Juke Box that was stolen off Eath a few years back. </look>
        </object>
      </object>
      <object name="Kitchen">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <exit alias="north" to="Recreation Room">
          <inherit name="northdirection" />
        </exit>
      </object>
      <object name="Recreation Room">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <prefix>the</prefix>
        <exit alias="northwest" to="Elevator Down">
          <inherit name="northwestdirection" />
        </exit>
        <exit alias="north" to="Crew Quarters">
          <inherit name="northdirection" />
        </exit>
        <exit alias="south" to="Kitchen">
          <inherit name="southdirection" />
        </exit>
      </object>
      <object name="Elevator Up">
        <inherit name="editor_room" />
        <usedefaultprefix type="boolean">false</usedefaultprefix>
        <descprefix type="string"></descprefix>
        <alias></alias>
        <exitslistprefix type="string"></exitslistprefix>
        <description type="script">
          msg ("You enter the elevator, and take it down to the Recreation Room.")
          MoveObject (player, Recreation Room)
        </description>
      </object>
    </object>
  </object>
  <verb>
    <property>cover</property>
    <pattern>cover</pattern>
    <defaultexpression>"You can't cover " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>uncover</property>
    <pattern>uncover</pattern>
    <defaultexpression>"You can't uncover " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>cutwith</property>
    <pattern>cut with</pattern>
    <defaultexpression>"You can't cut with " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>cutopenwith</property>
    <pattern>cut open with</pattern>
    <defaultexpression>"You can't cut open with " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>pour</property>
    <pattern>pour</pattern>
    <defaultexpression>"You can't pour " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>extract</property>
    <pattern>extract</pattern>
    <defaultexpression>"You can't extract " + object.article + "."</defaultexpression>
  </verb>
  <command name="empty pragma">
    <unresolved>remove</unresolved>
    <pattern>empty #object_one#</pattern>
    <script>
      foreach (child, GetDirectChildren(object_one)) {
        AddToInventory (child)
      }
    </script>
  </command>
  <verb>
    <property>killself</property>
    <pattern>kill self</pattern>
    <defaultexpression>"You can't kill self " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>clean</property>
    <pattern>clean</pattern>
    <defaultexpression>"You can't clean " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>play</property>
    <pattern>play</pattern>
    <defaultexpression>"You can't play " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>break</property>
    <pattern>break</pattern>
    <defaultexpression>"You can't break " + object.article + "."</defaultexpression>
  </verb>
</asl>